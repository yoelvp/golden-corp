---
import { pages } from "@/constants/pages"
import HamburguerMenu from "./HamburgerMenu.astro"
import type { Page } from "@/types/pages"

interface Props {
  hasBackgroundHeader?: boolean
}

const { pathname } = Astro.url
const { hasBackgroundHeader } = Astro.props
const normalizedPathName =
  pathname.length > 1 && pathname.endsWith("/") ? pathname.slice(0, -1) : pathname

const currentPages: Page[] = pages.map((page) => ({
  ...page,
  isActive: normalizedPathName === page.href,
}))
const hasBackground = hasBackgroundHeader ? 'yes' : 'no'
---

<header
  id="header"
  class="header fixed top-0 left-0 z-[100] w-full h-28 flex items-center transition-[background] duration-300"
  class:list={[
    {
      'bg-white text-primary': hasBackgroundHeader
    },
    {
      "text-white": !!hasBackgroundHeader
    }
  ]}
  data-has-background={hasBackground}
>
  <div class="section-layout flex justify-between items-center">
    <a href="/">
      <img src="/images/logo.svg" alt="logo" class="h-20 w-auto" />
    </a>

    <nav class="hidden items-center justify-center lg:flex">
      <ul id="menuItems" class="flex justify-center items-center menu">
        {currentPages.map((page) => (
          <li class="list-item relative">
            <a
              href={page.href}
              rel="noopener noreferrer"
              class="text-sm px-4 uppercase menu-item"
              class:list={[{ "active-link": page.isActive }]}
            >
              {page.name}
            </a>
            {page.subOptions && (
              <div class="submenu-wrapper py-4">
                <ul class="rounded-xl overflow-hidden bg-primary/80">
                  {page.subOptions.map(subPage => (
                    <li>
                      <a href={subPage.href} class="w-full inline-block px-4 py-1 text-white hover:bg-secondary">
                        {subPage.name}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </li>
        ))}
      </ul>
    </nav>

    <HamburguerMenu id="toggleMenuButton" />
  </div>
</header>

<div id="mobileMenu" class="mobile-menu bg-white">
  <nav class="flex flex-col">
    <ul>
      {currentPages.map((page) => (
        <li>
          <a
            href={page.href}
            rel="noopener noreferrer"
            class="w-full inline-block px-4 py-2 bg-secondary mb-1 uppercase text-white transition-colors"
            class:list={[{ "active-link": page.isActive }]}
          >
            {page.name}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</div>

<style>
.mobile-menu {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 80;
  padding-top: 128px;
}

.mobile-menu-open {
  display: block;
}

.menu-item::after {
  position: absolute;
  content: '';
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--secondary);
  transform: scale(0, 1);
  transition: transform 500ms cubic-bezier(0.57, 0.4, 0.55, 1.17);
}

.menu-item:hover {
  color: var(--secondary);
  transition: color 200ms ease;
}

.menu-item:hover::after {
  transform: scale(1, 1);
  color: var(--secondary);
}

.active-link {
  color: var(--secondary);
}

.active-link::after {
  position: absolute;
  content: '';
  left: 0;
  bottom: -4px;
  width: 100%;
  height: 2px;
  transform: scale(1, 1);
  background-color: var(--secondary);
}

.submenu-wrapper {
  display: none;
  position: absolute;
  width: 520px;
}

.menu li:hover .submenu-wrapper {
  display: block;
}
</style>

<script>
import { $ } from "@/lib/dom-selector";

const $header = $("#header")
const $mobileNavigation = $("#mobileMenu")
const $menuItems = $("#menuItems")
const openMenuElement = $("#toggleMenuButton")
const dataHasBackground = $header?.dataset.hasBackground

openMenuElement?.addEventListener("click", () => {
  $mobileNavigation?.classList.toggle("mobile-menu-open")
})

document?.addEventListener("scroll", () => {
  const scrollPosition = window.scrollY
  const heightHero = 240

  if (dataHasBackground === 'no') {
    if (scrollPosition > heightHero) {
      $header?.classList.add("bg-white", "border-b", "border-b-primary/40")
      $menuItems?.classList.add("text-primary")
    } else {
      $header?.classList.remove("bg-white", "border-b", "border-b-primary/40")
      $menuItems?.classList.remove("text-primary")
    }
  }
})
</script>
